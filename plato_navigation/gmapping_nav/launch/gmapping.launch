<?xml version="1.0"?>
<launch>

    <arg name="is_simulation" default="false"/>
    <param name="use_sim_time" value="$(arg is_simulation)"/>
    <!--param name="/use_sim_time" value="false"/-->
    <arg name="base_frame" default="chassis"/>
    <arg name="scan_topic" default="scan"/>
    <arg name="odom_frame"  default="odom"/>
    <arg name="map_frame"  default="map"/>


    <!--node pkg="tf" type="static_transform_publisher" name="velodyne_to_chassis" args="0 0 0 0 0 0 /chassis /velodyne 100"/-->
    <node pkg="gmapping" name="slam_gmapping" type="slam_gmapping" output="screen">
	<!-- Frames and topics names -->
	<remap from="scan" to="$(arg scan_topic)"/>
        <param name="base_frame" value="$(arg base_frame)"/>
	<param name="odom_frame" value="$(arg odom_frame)"/>
	<param name="map_frame" value="$(arg map_frame)"/>

	<!-- throttle_scans (int, default: 1)
	     Process 1 out of every this many scans -->
	<param name="throttle_scans" value="1"/>

	<!-- map_update_interval (float, default: 5.0)
	     How long (in seconds) between updates to the map.
	     Lowering this number updates the occupancy grid more often,
	     at the expense of greater computational load. -->
	<param name="map_update_interval" value="2.0"/>

	<!-- maxUrange (float, default: 80.0)
	     The maximum usable range of the laser.
	     A beam is cropped to this value. -->
	<param name="maxUrange" value="100.0"/>

	<!-- maxRange (float)
	     The maximum range of the sensor. If regions with no obstacles
	     within the range of the sensor should appear as free space in
	     the map, set maxUrange < maximum range of the real sensor
	     <= maxRange. -->
	<param name="maxRange" value="30.0"/>

	<!-- sigma (float, default: 0.05)
	     The sigma used by the greedy endpoint matching -->
	<param name="sigma" value="0.05"/>

	<!-- kernelSize (int, default: 1)
	     The kernel in which to look for a correspondence -->
	<param name="kernelSize" value="1"/>

	<!-- lstep (float, default: 0.05)
	     The optimization step in translation -->
	<param name="lstep" value="0.05"/>

	<!-- astep (float, default: 0.05)
	     The optimization step in rotation -->
	<param name="astep" value="0.05"/>

	<!-- iterations (int, default: 5)
	     The number of iterations of the scanmatcher -->
	<param name="iterations" value="5"/>

	<!-- lsigma (float, default: 0.075)
	     The sigma of a beam used for likelihood computation -->
	<param name="lsigma" value="0.075"/>

	<!-- ogain (float, default: 3.0)
	     Gain to be used while evaluating the likelihood,
	     for smoothing the resampling effects -->
	<param name="ogain" value="3.0"/>

	<!-- lskip (int, default: 0)
 	     Number of beams to skip in each scan. Take only every (n+1)th
	     laser ray for computing a match (0 = take all rays) -->
	<param name="lskip" value="0"/>

	<!-- minimumScore (float, default: 0.0)
	     Minimum score for considering the outcome of the scan matching good.
	     Can avoid jumping pose estimates in large open spaces when using
	     laser scanners with limited range (e.g. 5m). Scores go up to 600+,
	     try 50 for example when experiencing jumping estimate issues. -->
	<param name="minimumScore" value="0"/>

	<!-- srr (float, default: 0.1)
	     Odometry error in translation as a function of translation (rho/rho) -->
	<param name="srr" value="0.1"/>

	<!-- srt (float, default: 0.2)
	     Odometry error in translation as a function of rotation (rho/theta) -->
	<param name="srt" value="0.2"/>

	<!-- str (float, default: 0.1)
	     Odometry error in rotation as a function of translation (theta/rho) -->
	<param name="str" value="0.1"/>

	<!-- stt (float, default: 0.2)
	     Odometry error in rotation as a function of rotation (theta/theta) -->
	<param name="stt" value="0.2"/>

	<!-- linearUpdate (float, default: 1.0)
	     Process a scan each time the robot translates this far -->
	<param name="linearUpdate" value="0.1"/>

	<!-- angularUpdate (float, default: 0.5)
	     Process a scan each time the robot rotates this far -->
	<param name="angularUpdate" value="0.1"/>

	<!-- temporalUpdate (float, default: -1.0)
	     Process a scan if the last scan processed is older than the update
	     time in seconds. A value less than zero will turn time based
	     updates off. -->
	<param name="temporalUpdate" value="1.0"/>

	<!-- resampleThreshold (float, default: 0.5)
	     The Neff based resampling threshold -->
	<param name="resampleThreshold" value="0.5"/>

	<!-- particles (int, default: 30)
	     Number of particles in the filter -->
	<param name="particles" value="30"/>

	<!-- xmin (float, default: -100.0)
	     Initial map size (in metres) -->
	<param name="xmin" value="-10.0"/>

	<!-- ymin (float, default: -100.0)
	     Initial map size (in metres) -->
	<param name="ymin" value="-10.0"/>

	<!-- xmax (float, default: 100.0)
	     Initial map size (in metres) -->
	<param name="xmax" value="10.0"/>

	<!-- ymax (float, default: 100.0)
	     Initial map size (in metres) -->
	<param name="ymax" value="10.0"/>

	<!-- delta (float, default: 0.05)
	     Resolution of the map (in metres per occupancy grid block) -->
	<param name="delta" value="0.05"/>

	<!-- llsamplerange (float, default: 0.01)
	     Translational sampling range for the likelihood -->
	<param name="llsamplerange" value="0.01"/>

	<!-- llsamplestep (float, default: 0.01)
	     Translational sampling step for the likelihood -->
	<param name="llsamplestep" value="0.01"/>

	<!-- lasamplerange (float, default: 0.005)
	     Angular sampling range for the likelihood -->
	<param name="lasamplerange" value="0.005"/>

	<!-- lasamplestep (float, default: 0.005)
	     Angular sampling step for the likelihood -->
	<param name="lasamplestep" value="0.005"/>

	<!-- transform_publish_period (float, default: 0.05)
	     How long (in seconds) between transform publications. -->
	<param name="transform_publish_period" value="0.05"/>

	<!-- occ_thresh (float, default: 0.25)
	     Threshold on gmapping's occupancy values. Cells with greater
	     occupancy are considered occupied (i.e., set to 100 in the
	     resulting sensor_msgs/LaserScan).  -->
	<param name="occ_thresh" value="0.25"/>


    </node>

</launch>
